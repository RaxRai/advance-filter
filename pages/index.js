import Head from 'next/head';
import * as React from 'react';
import styles from '../styles/Home.module.css';
import Check from '../components/UI/Check';
import MultiSelect from '../components/UI/MultiSelect';
import RadioDate from '../components/UI/RadioDate';
import { Router, useRouter } from 'next/router';

const filters = [
  { type: 'search', name: 'search', slug: 's' },
  { type: 'cb', name: 'Alive', slug: 'alive' },
  { type: 'cb', name: 'Senior Citizen', slug: 'senior' },
  {
    type: 'multiselect',
    name: 'Country',
    options: [
      { name: 'Bharat', value: 'india' },
      { name: 'Amrica', value: 'usa' },
    ],
    slug: 'country',
  },
  {
    type: 'select-date',
    name: 'Year',
    slug: 'year',
    options: [
      { name: 'Last Week', value: 'last_week' },
      { name: 'Last Month', value: 'last_month' },
    ],
  },
  {
    type: 'sort',
    slug: 'sort',
    options: [{ name: 'Country Name', value: 'country_name' }],
  },
];

export default function Home() {
  const touter = useRouter();
  React.useEffect(() => {
    const search = window?.location.search;
    const params = search && new URLSearchParams(search);
    const foo = params && params.get('id');
    const bar = params && params.get('some');
    console.log({ foo }, { bar });
  }, []);

  const [selected, setSelected] = React.useState({});

  return (
    <div className={styles.container}>
      <Head>
        <title>Filter App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {filters.map((fff, index) => {
          switch (fff.type) {
            case 'cb':
              return <Check {...fff} key={index + fff.slug} />;
            case 'multiselect':
              return <MultiSelect {...fff} key={index + fff.slug} />;
            case 'select-date':
              return <RadioDate {...fff} key={index + fff.slug} />;
            default:
              return <div>Unknown Filter</div>;
          }
        })}
      </main>
      <button
        onClick={() => {
          touter
            .push({
              pathname: '/',
              query: { id: 'iiiddd' },
            })
            .then(() => {
              window.location.reload();
            });
        }}
      >
        click
      </button>
    </div>
  );
}
